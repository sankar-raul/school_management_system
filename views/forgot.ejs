<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Forgot Password</title>
</head>
<body>
    <h1><%= u_type %> forgot password</h1>
    <form>
        <label for="email"><%= u_type %> email </label>
        <input type="email" id="email" placeholder="<%= u_type %> email" required><br>
        <input type="submit" value="Request for Otp">
    </form>
    <br>
    <form>
        <label for="otp">Enter otp</label>
        <input type="number" id="otp" placeholder="enter otp" required><br>
        <label for="newPassword">New Password </label>
        <input type="password" id="newPassword" placeholder="enter new password" required> <br>
        <label for="newPassword">Confirm Password </label>
        <input type="password" id="confirmPassword" placeholder="re-enter new password" required> <br>
        <input type="submit" value="Change Password">
    </form>
    <script type="text/javascript">
        const form = document.querySelectorAll('form')
        let lastReqemail = ''
        form[0].onsubmit = async (e) => {
            e.preventDefault()
            lastReqemail = form[0].querySelector('input').value
            const result = await forgot(form[0].querySelector('input').value)
            alert(result)
        }
        const forgot = async (email) => {
            const response = await fetch('/<%= u_type == "Admin" ? "dashboard" : u_type + "s" %>/forgot', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({email: email, u_type: '<%= u_type.toLowerCase() %>'})
            })
            return response.text()
        }
        const varify = (email, otp, newPassword) => {
            return new Promise(async (resolve, reject) => {
                const response = await fetch('/<%= u_type == "Admin" ? "dashboard" : u_type + "s" %>/forgot/varify', {
                    method: 'POST',
                    headers: {'Content-Type': 'application/json'},
                    body: JSON.stringify({email: email, u_type: '<%= u_type.toLowerCase() %>', otp: otp, newPassword: newPassword})
                })
                resolve(response.text())
            })
        }
        form[1].onsubmit = async (e) => {
            e.preventDefault()
            if (form[1].querySelectorAll('input')[1].value ==  form[1].querySelectorAll('input')[2].value) {
                const response = await varify(lastReqemail, form[1].querySelectorAll('input')[0].value,  form[1].querySelectorAll('input')[1].value)
                if (response == 'refresh') {
                    location.href = '/<%= u_type == "Admin" ? "dashboard" : u_type + "s" %>'
                } else {
                    alert(response)
                }
            } else {
                alert('Passwords does not match!')
            }
            
        }
    </script>
</body>
</html>